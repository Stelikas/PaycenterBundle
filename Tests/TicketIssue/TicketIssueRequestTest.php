<?php

namespace Thanpa\PaycenterBundle\Tests\TicketIssue;

use Thanpa\PaycenterBundle\Service\TicketIssuer;
use Thanpa\PaycenterBundle\TicketIssue\TicketIssueRequest;

/**
 * Class TicketIssueRequestTest
 * @package Thanpa\PaycenterBundle\Tests\TicketIssue
 */
class TicketIssueRequestTest extends \PHPUnit_Framework_TestCase
{
    /**
     * This test checks if a valid XML is generated by TicketIssuer class
     */
    public function testGetTicketMethod()
    {
        $guzzleMock = $this->getMockBuilder('\GuzzleHttp\Client')
            ->disableOriginalConstructor()
            ->getMock();

        $entityManager = $this->getMockBuilder('\\Doctrine\\ORM\\EntityManager')
            ->disableOriginalConstructor()
            ->setMethods(['persist', 'flush'])
            ->getMock();

        $issuer = new TicketIssuer(
            $guzzleMock,
            'int',
            'int',
            'int',
            'string',
            'string',
            'https://paycenter.piraeusbank.gr/services/tickets/issuer.asmx',
            $entityManager
        );

        $fields = [
            'Username' => 'string',
            'Password' => 'b45cffe084dd3d20d928bee85e7b0f21',
            'MerchantId' => 'int',
            'PosId' => 'int',
            'AcquirerId' => 'int',
            'MerchantReference' => 'string',
            'RequestType' => 'string',
            'ExpirePreauth' => 'unsignedByte',
            'Amount' => 'decimal',
            'CurrencyCode' => 'int',
            'Installments' => 'unsignedByte',
            'Bnpl' => 'unsignedByte',
            'Parameters' => 'string',
        ];

        $expected = file_get_contents(__DIR__.'/../Fixtures/ticketIssueRequest.xml');

        $this->assertEquals($expected, TicketIssueRequest::getBody($fields));
    }
}
